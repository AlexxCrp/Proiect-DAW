// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SkiProject.Entities;

namespace SkiProject.Migrations
{
    [DbContext(typeof(SkiProjectContext))]
    [Migration("20220122000447_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SkiProject.Entities.Brand", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("SkiProject.Entities.Ski", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BrandId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Skis");
                });

            modelBuilder.Entity("SkiProject.Entities.Wishlist", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("Wishlists");
                });

            modelBuilder.Entity("SkiProject.Entities.WishlistSki", b =>
                {
                    b.Property<string>("WishlistId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SkiId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("WishlistId", "SkiId");

                    b.ToTable("wishlistSkis");
                });

            modelBuilder.Entity("SkiProject.Entities.Ski", b =>
                {
                    b.HasOne("SkiProject.Entities.Brand", "Brand")
                        .WithMany("Skis")
                        .HasForeignKey("BrandId");

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("SkiProject.Entities.WishlistSki", b =>
                {
                    b.HasOne("SkiProject.Entities.Ski", "Ski")
                        .WithMany("WishlistSkis")
                        .HasForeignKey("WishlistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkiProject.Entities.Wishlist", "Wishlist")
                        .WithMany("WishlistSkis")
                        .HasForeignKey("WishlistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ski");

                    b.Navigation("Wishlist");
                });

            modelBuilder.Entity("SkiProject.Entities.Brand", b =>
                {
                    b.Navigation("Skis");
                });

            modelBuilder.Entity("SkiProject.Entities.Ski", b =>
                {
                    b.Navigation("WishlistSkis");
                });

            modelBuilder.Entity("SkiProject.Entities.Wishlist", b =>
                {
                    b.Navigation("WishlistSkis");
                });
#pragma warning restore 612, 618
        }
    }
}
